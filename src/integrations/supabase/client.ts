// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://nzutgzasjrnpeqmjmtps.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im56dXRnemFzanJucGVxbWptdHBzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ4NTIwNTEsImV4cCI6MjA2MDQyODA1MX0.qt_S0WALyldWQWtYMf5ZgBTwSbaEz0g3_ElRGfqOlbk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

/**
 * Helper function to add a role to a user, handling potential duplicate roles
 * @param userId - The user ID to assign the role to
 * @param role - The role to assign
 * @returns The result of the operation
 */
export const addUserRole = async (userId: string, role: string) => {
  // First check if role already exists to avoid the unique constraint error
  const { data: existingRole } = await supabase
    .from('user_roles')
    .select('*')
    .eq('user_id', userId)
    .eq('role', role)
    .single();
    
  // If role already exists, return early without error
  if (existingRole) {
    return { error: null, success: true, data: existingRole };
  }
  
  // Otherwise insert the new role
  return await supabase
    .from('user_roles')
    .insert({ user_id: userId, role })
    .select()
    .single();
};
